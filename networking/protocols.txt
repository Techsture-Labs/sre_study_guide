- TCP/IP
  - Transmission Control Protocol/Internet Protocol
  - Specifies how data should be packetized, addressed, transmitted, routed, and received at the destination.
  - Organized into four abstraction layers:
    - Link
      - Used to move packets between the Internet layer of two different hosts on the same link.
    - Internet
      - Sends packets of data (datagrams) across potentially multiple networks.
    - Transport
      - End-to-end message transmission independent of the underlying network.
      - Responsible for error control, segmentation, flow control, congestion control, and application addressing (port numbers).
    - Application
      - HTTP, FTP, SMTP, DHCP, DNS, etc.
      - Distinguishes between user and support protocols. Examples are:
        - User Protocol: FTP
	- System Protocol: DNS
  - Benefits over UDP:
    - Reliable
      - TCP managers message acknowledgement, retransmission, and timeout.
    - Ordered
      - If data segments arrive in the wrong order, TCP buffers the out-of-order data until it can be properly reordered and deliver to the application.
    - Streaming:
      - Data is read as a stream; no distinguishing indications are transmitted to signal segment boundaries.
  - Protocol Operation:
    - LISTEN (Server)
      - Waiting for a connection request from any remote TCP and port.
    - SYN-SENT (Client)
      - Waiting for a matching response after sending a connection request.
    - SYN-RECEIVED (Server)
      - Waiting for a connection request acknowledgement after having both received and sent a connection request.
    - ESTABLISHED (Client & Server)
      - Represents an open connection.
    - FIN-WAIT-1 (Client & Server)
      - Waiting for a termination request from the remote machine, or acknowledgement of a previously sent connection termination request.
    - FIN-WAIT-2 (Client & Server)
      - Waiting for a termination request from the remote machine.
    - CLOSE-WAIT (Client & Server)
      - Waiting for a termination request from the local user.
    - CLOSING (Client & Server)
      - Waiting for a termination request acknowledgement from the remote machine.
    - LAST-ACK (Client & Server)
      - Waiting for an acknowledgement of the connection termination request (which includes an acknowledgement of its connection termination request).
    - TIME_WAIT (Client or Server)
      - Waiting for enough time to pass to ensure the remote machine received the acknowledgement of its termination request.
      - Maximum wait time is 4 minutes (MSL (Maximum Segment Lifetime)).
    - CLOSED (Client & Server)
      - No connection
  - Connection Establishment
    - Before a client attempts to connect with a server, the server must first bind to and listen at a port to open it up for connections (referred to as a "passive open").
    - Once a passive open is establised, the client may initiate an "active open".
    - To establish a connection, TCP uses a three-way handshake:
      - SYN
        - Client sends a SYN to the server.
        - The client sets the segment's sequence number to a random value (A).
      - SYN_ACK
        - The server replies with a SYN-ACK.
        - The acknowledgement is set to A+1.
        - The sequence number that the server chooses for the packet is another random value (B).
      - ACK
        - The client sends an ACK to the server.  The sequence number is set to the received acknowledgement value (A+1).
        - The acknowledgement number is set to one more than the received sequence (B+1).

- UDP
  - User Datagram Protocol
  - Connectionless transmission model with a minimum of protocol mechanism.
    - No handshaking which exposes programs using UDP to any unreliability of the underlying network protocol.
    - No guarantee of delivery, ordering, or duplication protection.
    - Provides checksums for data integrity and port numbers for addressing different functions at the source and destination of the datagram.
  - Packet Structure:
    - Source Port
    - Destination Port
    - Length
    - Checksum
  - Benefits over TCP:
    - Lightweight
      - No ordering of messages
      - No connection tracking
    - Datagrams
      - Packets are sent individually and checked for integrity only if they arrive.
    - Broadcasts
      - Being connectionless, UDP can broadcast; sent packets can be addressed to be receivable by all devices on a subnet.

- ICMP
	- Internet Control Message Protocol
	- Used by network devices to send error messages (such as a TTL reaching 0).
	- Not regulary used by end-user applications (with the exception of diagnostic tools like ping and traceroute).
